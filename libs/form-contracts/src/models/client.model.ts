export class Client {
  constructor(
    public id?: string,
    public createdAt?: Date,
    public updatedAt?: Date,
    public clientDt?: string,
    public transactionRqDt?: Date,
    public premiumTotal?: number,
    public premiumMonths?: number,
    public pipedriveDealId?: string,
    public pipedriveNoteId?: string,
    public firstName?: string,
    public lastName?: string,
    public phone?: string,
    public email?: string,
    public streetName?: string,
    public streetNumber?: string,
    public city?: string,
    public stateCd?: string,
    public tag?: string,
    public postalCd?: string,
    public completedAutoForm?: boolean,
    public latitude?: number,
    public longitude?: number,
    public gender?: string,
    public birthDate?: Date,
    public sfAccountId?: string,
    public sfContactId?: string,
    public sfInsuranceId?: string,
    public hasCancelled?: boolean,
    public educationLevel?: string,
    public priorClient?: boolean,
    public maritalStatus?: string,
    public occupation?: string,
    public sequenceNumber?: number,
    public hasFollowUpEmail?: boolean,
    public newLeadFired?: boolean,
    public numOfLosses?: string,
    public creditScore?: string,
    public lengthAtAddress?: string,
    public raterResponseStatus?: string,
    public raterResponse?: string,
    public qqContactId?: string,
    public qqPolicyId?: string,
    public ezlynxUrl?: string,
    public hasPriorInsurance?: string,
    public priorInsuranceCompany?: string,
    public priorInsuranceDuration?: string,
    public fullAddress?: string,
    public priorPenalties?: string,
    public priorPenaltiesCode?: string,
    public priorPenaltiesDate?: string,
    public priorInsuranceYears?: string,
    public priorInsuranceMonths?: string,
    public yearsWithCarrier?: string,
    public monthsWithCarrier?: string,
    public priorInsuranceExpirationDate?: string,
    public homeownership?: string,
    public hasAccidents?: string,
    public accidentDate?: string,
    public accidentType?: string,
    public hasViolations?: string,
    public violationDate?: string,
    public violationType?: string,
    public hasCompLoss?: string,
    public compLossDate?: string,
    public compLossType?: string,
    public isFirstTimeHomeBuyer?: string,
    public homeInsurancePreviouslyCancelled?: string,
    public hasSecondAddress?: string,
    public hasHomeLoss?: string,
    public homeLossDate?: string,
    public homeLossType?: string,
    public homeLossAmount?: string,
    public unitNumber?: string,
    public hasUnitNumber?: string,
    public priorPolicyPaidInFull?: string,
    public priorPolicyPaymentMethod?: string,
    public payThroughEscrow?: string,
    public numberOfResidentsInHome?: string,
    public rentersLimits?: string,
    public homeHasMortgage?: string,
    public isPriorClient?: string,
    public authCreditCheck?: string,
    public priorBodilyInjuryLimits?: string,
    public preferredContactMethod?: string,
    public vehicleCoverageLevel?: string,
    public height?: string,
    public weight?: string,
    public nicotineUse?: string,
    public healthRating?: string,
    public typeOfInsurance?: string,
    public coverageTerm?: string,
    public coverageNeeded?: string,
    public referredBy?: string,
    public preferredAgent?: string,
    public permissionToContact?: string,
    public marriedOrHasCoBorrower?: string,
    public spouseName?: string,
    public spouseBirthdate?: string,
    public referrersFirstName?: string,
    public referrersLastName?: string,
    public referrersEmail?: string,
    public reasonForShopping?: string,
    public referrersPhone?: string,
    public wantsLiabilityCoverage?: string,
    public timeToQuote?: string,
    public hasOtherLicensedDrivers?: string,
    public hadLoss?: string,
    public lossExplanation?: string,
    public priorInsurancePremium?: string,
    public yearsWithLapseInInsurance?: string,
    public monthsWithLapseInInsurance?: string,
    public hasMedicare?: string,
    public medications?: string[],
    public hasFamilyWithDiseases?: string,
    public hadLicenseSuspended?: string,
    public isBusinessPartner?: string,
    public hadLapseInInsurance?: string,
    public wantsCyberLiability?: string,
    public priorInsuranceStartDate?: string,
    public liabilityLimits?: string,
    public hadLiabilityClaims?: string,
    public liabilityClaimExplanation?: string,
    public reasonForInsuranceExplanation?: string,
    public nicotineFrequency?: string,
    public fullName?: string,
    public ssn?: string,
    public ssnHash?: string,
    public lifecycleUpdatedAt?: Date,
    public formClientId?: number,
    public companyClientId?: number,
    public clientAgentId?: number,
    public clientLifecycleId?: number,
    public driverId?: number,
    public clientLifecycleAnalyticId?: number,
    public effectiveDate?: Date,
    public tags?: string[],
    public ezlynxId?: string,
    public locations?: Location[],
    public wealthboxId?: string,
    public lastMessage?: object,
    public finishedFormEmailFired?: Boolean,
    public zapStatus?: string,
    public integrationsAreValid?: boolean,
    public validationsPassed?: boolean,
    public formStatus?: FormStatus
  ) {}
}

export type FormStatus = 'New' | 'Filling' | 'Finished' | 'Exited';
