import { Client } from "./client.model";

export class Commercial {
  constructor(
    public id?: number,
    public firstName?: string,
    public lastName?: string,
    public postalCd?: string,
    public industry?: string,
    public isGeneralLiability?: boolean,
    public isBusinessProperty?: boolean,
    public isCommercialAuto?: boolean,
    public isProfessionalLiability?: boolean,
    public businessName?: string,
    public businessStartedDate?: Date,
    public businessLat?: string,
    public businessLong?: string,
    public yearsExperience?: number,
    public phone?: string,
    public email?: string,
    public businessRegistration?: string,
    public businessDescription?: Text,
    public website?: string,
    public coverageStartDate?: Date,
    public businessAddress?: string,
    public businessCity?: string,
    public businessState?: string,
    public businessZipCode?: string,
    public hadBankruptcy?: boolean,
    public hadInvestigation?: boolean,
    public hadCitation?: boolean,
    public servicesDescription?: Text,
    public hasActiveInsurance?: boolean,
    public hasGeneralLiability?: boolean,
    public hasBusinessProperty?: boolean,
    public hasCommercialAuto?: boolean,
    public hasProfessionalLiability?: boolean,
    public hadClaim?: boolean,
    public hadInsuranceStopped?: boolean,
    public hadInsuranceStoppedExplained?: Text,
    public generalLiabilityCoverageNeeded?: number,
    public includeEmploymentPracticeLiability?: boolean,
    public includeDataBreachCoverage?: boolean,
    public professionalLiabilityCoverageNeeded?: number,
    public hasCommercialVehicles?: boolean,
    public includeBuildingCoverage?: boolean,
    public buildingCoverageNeeded?: number,
    public includeContentConverage?: boolean,
    public contentCoverageNeeded?: number,
    public includeComputerConverage?: boolean,
    public computerCoverageNeeded?: number,
    public hasComputerSecurity?: boolean,
    public buildingSquareFootage?: number,
    public buildingSquareFootageUsed?: number,
    public buildingOwnOrRent?: string,
    public buildingType?: string,
    public buildingStories?: number,
    public buildingYearBuilt?: number,
    public buildingHasSprinklers?: boolean,
    public buildingHasManufacturing?: boolean,
    public buildingHasSafeGuards?: boolean,
    public updatedAt?: Date,
    public createdAt?: Date,
    public clientCommercialId?: string,
    public client?: Client
  ) {}
}
