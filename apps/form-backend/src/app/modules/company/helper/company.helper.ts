import * as _ from 'lodash';

export async function returnKeys() {
  return {
    company: {
      name: 'Agency Name',
      contactNumber: 'Agency Phone Number',
      contactEmail: 'Agency Email',
      mainLocation: 'Agency Main Location',
      companyWebsite: 'Agency Website',
      producerNumber: 'Producer Code',
      mainProducer: 'Main Producer',
      streetNumber: 'Street Number',
      streetName: 'Street Name',
      streetAddress: 'Street Address',
      city: 'City',
      state: 'State',
      zipCode: 'Zip Code',
      county: 'County',
    },
    client: {
      firstName: 'First Name',
      lastName: 'Last Name',
      phone: 'Phone',
      email: 'Email',
      streetNumber: 'Street #',
      streetName: 'Street Name',
      city: 'City',
      county: 'County',
      stateCd: 'State',
      postalCd: 'Zip',
      streetAddress: 'Street Address',
      createdAt: 'Submission Date',
      tag: 'URL Tag',
      permissionToContact: 'Permission To Contact',
      consent: 'Consent Agreement',
      reasonForShopping: 'Reason For Insurance',
      reasonForInsuranceExplanation: 'Reason For Insurance Explanation',
      marriedOrHasCoBorrower: 'Married Or Has Co-Borrower',
      spouseName: 'Spouses Name',
      spouseFirstName: 'Spouse First Name',
      spouseLastName: 'Spouse Last Name',
      spouseGender: 'Spouse Gender',
      spouseMaritalStatus: 'Spouse Marital Status',
      spouseEducationLevel: 'Spouse Education',
      spouseBirthdate: 'Spouses Birthdate',
      spouseOccupation: 'Spouses Occupation',
      hasCreditCheckAuthorization: 'Can Credit Check?',
      referredBy: 'Referred By',
      preferredContactMethod: 'Preferred Contact Method',
      preferredAgent: 'Preferred Agent',
      referrersFirstName: 'Referrers First Name',
      referrersLastName: 'Referrers Last Name',
      referrersEmail: 'Referrers Email',
      referrersPhone: 'Referrers Phone',
      completedAutoForm: 'Completed Auto',
      // latitude: 'Lat',
      // longitude: 'Long',
      gender: 'Gender',
      birthDate: 'Birthdate',
      hasCancelledPriorPolicy: 'Has Cancelled Insurance',
      hadLapseInInsurance: 'Had Lapse In Insurance',
      educationLevel: 'Education',
      isPriorClient: 'Is Prior Client',
      maritalStatus: 'Marital Status',
      occupation: 'Occupation',
      numOfLosses: '# Losses',
      creditScore: 'Credit Score',
      lengthAtAddress: 'Length At Address',
      // ezlynxUrl: 'EZLynx URL',
      hasPriorInsurance: 'Has Prior Insurance',
      priorInsuranceCompany: 'Prior Insurance Co.',
      priorInsuranceDuration: 'Prior Insurance Years',
      fullAddress: 'Full Address',
      priorPenalties: 'Prior Violations',
      priorPenaltiesCode: 'Prior Violation Code',
      priorPenaltiesDate: 'Prior Violation Date',
      priorInsuranceYears: 'Prior Insurance Years',
      priorInsuranceMonths: 'Prior Insurance Months',
      yearsWithCarrier: 'Years With Carrier',
      monthsWithCarrier: 'Months With Carrier',
      priorInsuranceExpirationDate: 'Prior Insurance Exp.',
      homeownership: 'Homeownership',
      hasAccidents: 'Had Accident',
      accidentDate: 'Accident Date',
      accidentType: 'Accident Description',
      hasViolations: 'Had Violation',
      violationDate: 'Violation Date',
      violationType: 'Violation Description',
      hasCompLoss: 'Had Comp Loss',
      compLossDate: 'Comp Loss Date',
      compLossType: 'Comp Loss Description',
      isFirstTimeHomeBuyer: 'First Time Home Buyer',
      homeInsurancePreviouslyCancelled: 'Home Ins. Prev Cancelled',
      hasSecondAddress: 'Has Alt Address',
      hasHomeLoss: 'Had Home Loss',
      homeLossDate: 'Home Loss Date',
      homeLossType: 'Home Loss Description',
      homeLossAmount: 'Home Loss Amount',
      unitNumber: 'Address Unit #',
      priorPolicyPaidInFull: 'Prior Policy Paid In Full',
      priorPolicyPaymentMethod: 'Prior Policy Payment Method',
      payThroughEscrow: 'Prior Paid Through Escrow',
      numberOfResidentsInHome: '# Residents',
      rentersLimits: "Prior Renter's Limits",
      isBusinessPartner: 'Is Business Partner',
      priorInsurancePremium: 'Prior Insurance Premium',
      yearsWithLapseInInsurance: 'Insurance Lapse Years',
      monthsWithLapseInInsurance: 'Insurance Lapse Months',
      hadLoss: 'Had Loss',
      lossExplanation: 'Loss Explanation',
      coverageTerm: 'Prior Term Needed',
      coverageNeeded: 'Coverage Needed In $',
      typeOfInsurance: 'Type Of Insurance',
      hadLicenseSuspended: 'License Suspended',
      hasFamilyWithDiseases: 'Family Has Disease History',
      healthRating: 'Health Rating',
      nicotineUse: 'Uses/Used Tobacco',
      nicotineFrequency: 'Tobacco Use Frequency',
      hasMedicare: 'Has Medicare',
      height: 'Height',
      weight: 'Weight',
      medications: 'Medications',
      timeToQuote: 'Time To Quote',
      wantsLiabilityCoverage: 'Wants Liability Coverage',
      wantsCyberLiability: 'Wants Cyber Liability',
      priorInsuranceStartDate: 'Prior Insurance Start Date',
      liabilityLimits: 'Liability Limits',
      hadLiabilityClaims: 'Had Liability Claim',
      liabilityClaimExplanation: 'Liability Claim Explanation',
      policyType: 'Policy Type',
      effectiveDate: 'Effective Date',
      entityName: 'Entity Name',
      goalsWithNewInsurance: 'Goals With Insurance',
      businessDecisionsDescription: 'Business Decision Description',
      hasCompletedQuoteForm: 'Completed Form',
      hasPreviousAddress: 'Has Previous Address',
      previousAddress: 'Previous Address',
      coverageDescription: 'Coverage Description',
      desiredPremium: 'Desired Premium',
      wantsLifeBundle: 'Wants Life Bundle',
      hasLLC: 'Has LLC',
      fullName: 'Full Name',
      isMarried: 'Is Married',
      yearsAtCurrentAddress: 'Years At Current Address',
      isUSCitizen: 'Is US Citizen',
      hasBeneficiaries: 'Has Beneficiaries',
      numberOfBeneficiaries: '# Beneficiaries',
      valueOfAssets: 'Value Of Assets',
      hasRealEstate: 'Has Real Estate',
      numberOfProperties: '# Properties',
      hasVehicles: 'Has Vehicles',
      numberOfVehicles: '# Vehicles',
      hasLifeInsurance: 'Has Life Insurance',
      typeOfLifeInsurance: 'Type Of Life Insurance',
      hasRetirementAccounts: 'Has Retirement Accounts',
      typeOfRetirementAccounts: 'Types Of Retirement Accounts',
      comments: 'General Comments',
      primaryPowerOfAttorney: 'Primary Power Of Attorney',
      secondaryPowerOfAttorney: 'Secondary Power Of Attorney',
      contingencyPowerOfAttorney: 'Contingency Power Of Attorney',
      typesOfInsurances: 'Types Of Insurances List',
      ssn: 'SSN',
      ssnHash: 'SSN Encrypted',
      additionalInsured: 'Additional Insured',
      policyNumber: 'Policy Number',
      otherInsurances: 'Other Insurances',
      numberOfResidentsUnder14: '# Residents Under 14',
      numberOfResidentsOver13: '# Residents Over 13',
      membershipDiscounts: 'Membership Discounts',
      today: "Today's Date",
      expirationDate: 'Proposed Expiration Date',
      hasMinorDrivers: 'Has Minor Drivers',
      hasFarms: 'Has/Leases Farms',
      hasWatercrafts: 'Has Watercrafts',
      hasRecreationalVehicles: 'Has Recreational Vehicles',
      hasRentals: 'Has Rentals',
      numberOfHomes: '# Homes',
      clubMembershipsText: 'Club Memberships Details',
      referralType: 'Referral Type',
      referralName: 'Referral Name',
      referralEmail: 'Referral Email',
      referralPhone: 'Referral Phone',
      vehicleDiscounts: 'Vehicle Discounts List',
      homeDiscounts: 'Home Discount List',
      priorPolicyTerm: 'Prior Policy Term',
      wantsUmbrellaCoverage: 'Wants Umbrella Coverage',
      wantsHomeBundle: 'Want Home Bundle',
      beneficiary: 'Beneficiary',
      hasAppliedForInsurance: 'Applied For Insurance',
      annualIncome: 'Annual Income',
      networth: 'Networth',
      totalSavings: 'Total Savings',
      totalExpenses: 'Total Expenses',
      yearsUntilRetirement: 'Years Until Retirement',
      employer: 'Employer',
      driversList: 'Drivers List',
      vehiclesList: 'Vehicles List',
      mailingAddress: 'Full Mailing Address',
      additionalCommentOne: 'Additional Comments One',
      additionalCommentTwo: 'Additional Comments Two',
      additionalCommentThree: 'Additional Comments Three',
      additionalCommentFour: 'Additional Comments Four',
      hasMedicalConditions: 'Has Pre. Medical Conditions',
      conditionDuration: 'Pre. Medical Condition Duration',
      conditionOutcome: 'Pre. Medical Condition Outcome',
      autoCoverageTerm: 'Auto Coverage Length',
      clientAgentId: 'Agent Assignment',
      umbrellaCoverageAmount: 'Umbrella Coverage Amount',
      birthState: 'State of Birth',
      currentInsurancePolicies: 'Current Insurance Policies [List]',
      wantsRentalReimbursementCoverage: '',
      isPregnant: 'Is Pregnant',
      numberOfDependents: 'Number of Dependants',
      hasToys: 'Has Toys',
      spouseEmployer: 'Spouses Employer',
      doctorsVisitReason: 'Doctors Visit Reason',
      authorizedHealthRelease: 'Authorized Health Release',
      hasContingentBeneficiaries: 'Has Contingent Beneficiaries',
      contingentBeneficiaries: 'Contingent Beneficiaries',
      appliedForDisability: 'Appled For Disability',
      disabilityDetails: 'Diability Details',
      insuranceDeclined: 'Declined Insurance',
      insuranceDeclineDetails: 'Declined Insurance Details',
      inAviation: 'In Aviation',
      doesExtremeSports: 'Does Extreme Sports',
      extremeSports: 'Extreme Sports',
      inMilitary: 'In Military',
      militaryDetails: 'Military Details',
      criminal: 'Criminal',
      criminalDetails: 'Criminal Details',
      hasOtherClaims: 'Has Other Claims',
      otherClaimDetails: 'Other Claims Details',
      receiveAtAddress: 'Receive At Address',
      country: 'Country',
      billPlan: 'Bill Plan',
      faceAmount: 'Face Amount',
      hasScheduledProperty: 'Has Scheduled Property',
      hasUmbrellaPolicy: 'Has Umbrella Property',
      ownerIsDriver: 'Owner is Driver',
      wantsGeneralLiability: 'Wants General Liability',
      hasLaneKeepAssistance: 'Has Lane Keep Assist.',
      hasSelfDrivingCar: 'Has Self-driving Car',
      hasLowMileageVehicle: 'Has Low Vehicle Mileage',
      hasDrivingMonitor: 'Has Driving Monitor',
      naicCode: 'Carrier NAIC Code',
      spousePhoneNumber: 'Spouse Phone Number',
      spouseEmail: 'Spouse Email',
      listOfTimesToContact: 'Lost of Times to Contact',
      insuranceCarrierAddress: 'Insurance Carrier Address',
      cancellationDate: 'Cancellation Date',
      interestType: 'Interest Type',
      interestsMailingAddress: 'Interest Mailing Address',
      cancelReason: 'Cancel Reasoning',
      cancelReasonOther: 'Other Cancel Reasoning',
      newCarrier: 'New Carrier Name',
      newPolicyNumber: 'New Policy Number',
      newEffectiveDate: 'New Effective Date',
      cancelMethod: 'Cancel Method',
      premiumFactor: 'Premium Factor',
      returnPremium: 'Return Premium',
      premiumAudit: 'Premium Audit',
      interestFullName: 'Interests Full Name',
      priorEvidenceDate: 'Prior Evidence Data',
      typeOfCoverage: 'Type of Coverage',
      insurerLetterCode: 'Insurer Letter Code',
      aggregateCoverage: 'Aggregate Coverage',
      umbrellaPolicyType: 'Umbrella Policy Type',
      coverageBasis: 'Coverage Basis',
      officerExcludeInclude: 'Officer Exclude Include',
      eachAccidentLimit: 'Each Accident Limit',
      eachEmpLimit: 'Each Employee Limit',
      workcompPolicyLimit: 'Workers Comp Policy Limit',
      otherCoverageDescription: 'Other Coverage Description',
      liabilityLimitsDescription: 'Liability Limit Description',
      loanNumber: 'Loan Number',
      authorizedRep: 'Authorized Representative',
      approver: 'Approver',
      reinstatementAmount: 'Reinstatement Amount',
      producer: 'Producer',
      monthsAtAddress: 'Months at Address',
      changeOfResidency: 'Change of Reseidency',
      witness: 'Witness',
      dateReinstatementFeePaid: 'Date Reinstatement Fee Paid',
      title: 'Title',
      agencyName: 'Agency Name',
      newProducer: 'New Producer',
      newAgencyName: 'New Agency Name',
      newProducerCode: 'New Producer Code',
      newAgencyAppointmentDate: 'New Agency Appointment Date',
      agencyFullAddress: 'Agency Full Address',
      agencyStreetAddress: 'Agency Street Address',
      agencyStreetName: 'Agency Street Name',
      agencyStreetNumber: 'Agency Street Number',
      agencyUnitNumber: 'Agency Unit Number',
      agencyCity: 'Agency City',
      agencyState: 'Agency State',
      agencyZipCode: 'Agency Zip Code',
      informationRelease: 'Information Release',
      roommateRelationship: 'Roommate Relationship',
      changeRequest: 'Change Request',
      spouseIndustry: 'Spouses Industry',
      industry: 'Industry',
      disclose: 'Disclosed All Information',
      paymentMethodList: 'Payment Method List',
      hasSameBIAndUM: 'BI Is Same as UM',
      previousAddressUnit: 'Previous Address Unit Number',
      wantsPetInsurance: 'Wants Pet Insurance',
      billPlanList: 'Bill Plan List',
      hasAdditionalVehiclesNotInsured: 'Has Additional Vehicles Not Insured',
      preferredContactTime: 'Preferred Contact Time',
      beneficiaryName: 'Beneficiary Name',
      yearsAtPreviousAddress: 'Years at Previous Address',
      monthsAtPreviousAddress: 'Months at Previous Address',
      monthsAtCurrentAddress: 'Months at Current Address',
      addressCode: 'Address Code',
      spouseSsn: 'Spouse SSN',
      // spouseSsnHash: 'Spouse SSN Hash',
      spouseRelationship: 'Spouse Relationship',
      relationship: 'Relationship',
      yearsSinceHospittalized: 'Years Since Hospitalized',
    },
    drivers: {
      applicantGivenName: 'First Name',
      applicantSurname: 'Last Name',
      applicantMiddleInitial: 'Middie Initial',
      applicantNameSuffix: 'Suffix',
      applicantCommUsedCd: '',
      applicantCommPhoneNumber: 'Phone',
      applicantCommEmailAddress: 'Email',
      applicantGenderCd: 'Gender',
      applicantBirthDt: 'Birthdate',
      applicantMaritalStatusCd: 'Marital Status',
      applicantOccupationClassCd: 'Occupation',
      ssnU: 'SSN',
      ssnUHash: 'SSN Encrypted',
      driverLicensedDt: 'License Issue Date',
      driverLicenseNumber: 'License #',
      driverLicenseStateCd: 'License State',
      hadLicenseSuspended: 'Had License Suspended',
      driverScore: '',
      ownOrRent: 'Home Ownership',
      numberOfResidentsInHome: '# Residents In Home',
      rentersLimits: "Renter's Limits",
      // currentlyInsured: 'Is Currenty Insured',
      yearsWithPriorInsurance: 'Years W/ Prior Ins.',
      creditScore: 'Credit Score',
      priorPenalties: '# Violations',
      priorPenaltiesDate: 'Violation Date',
      priorPenaltiesCode: 'Violation Code',
      priorPenaltiesText: 'Violation Expl.',
      applicantPreviousInsurance: 'Previous Insurance Co.',
      applicantPreviousInsuranceYears: 'Years With Ins. Co.',
      applicantPreviousInsuranceMonths: 'Months With Ins. Co.',
      // priorClient: 'Is Prior Client',
      // hasCancelled: 'Has Cancelled Ins.',
      // hasHomeBundle: 'Wants Home Bundle',
      // hasRentersBundle: 'Wants Renters Bundle',
      // hasHomeownersDiscount: 'Homeowner Discount',
      // hasMilitaryDiscount: 'Miltary',
      // hasPayInFullDiscount: 'Pay In Full',
      // hasAutoPayDiscount: 'Automatic Pay',
      // hasDefensiveDriverDiscount: 'Defensive Driver',
      // hasGoodStudentDiscount: 'Good Student',
      // hasRideshare: 'Ridesharer',
      age: 'Age',
      drivingExperience: 'Driving Experience',
      preferredContactMethod: 'Preferred Contact',
      // hasCommercialBundle: 'Wants Commercial Bundle',
      // hasLifeBundle: 'Wants Life Bundle',
      // hasMulticarDiscount: 'Multi-car Discount',
      // hasSafeDriverDiscount: 'Safe Driver Discount',
      // hasOver55Discount: 'Over 55 Discount',
      currentPremium: 'Current Premium',
      educationLevel: 'Education',
      // needsSR22: 'Needs SR22',
      // hasUmbrellaBundle: 'Wants Umbrella Bundle',
      lengthAtAddress: 'Length At Address',
      hasPriorInsurance: 'Has Prior Insurance',
      relationship: 'Relationship',
      hireDate: 'Hire Date',
      yearLicenseIssued: 'Year License Issued',
      numberOfAccidents: '# Accidents',
      numberOfViolations: '# Violations',
      hasAdditionalLicense: 'Has Additional License',
      additionalLicenseType: 'Additional License Type',
      additionalLicenseNumber: 'Additional License Number',
      fullName: 'Full Name',
      hasCommercialLicense: 'Has Commercial License',
      commercialLicenseNumber: 'Commercial License Number',
      currentEducationLevel: 'Current Education Level',
      hasDriversEducation: 'Has Drivers Education',
      hasMotorcycleLicenseEndorsements: 'Has Motorcycle Endorsement',
      hasDriversTrainingDiscount: 'Has Drivers Training',
      hasAwayAtSchoolDiscount: 'Away At School',
      industry: 'Industry',
      licenseStatus: 'License Status',
      employer: 'Employer',
      hasClaims: 'Has Accidents/Vios/Claims',
      hasViolations: 'Has Violations',
      hasAccidents: 'Has Accidents',
      accidentType: 'Accident Type',
      accidentDate: 'Accident Date',
      hasCompLoss: 'Has Damage Claim',
      compLossType: 'Damage Claim Type',
      compLossDate: 'Damage Claim Date',
      hadSafetyCourse: 'Had Safety Course',
      licenseSuspensionDetails: 'License Suspension Details',
      commercialLicenseYear: 'Commercial License Year',
      cdlType: 'CDL Type',
      vehicleLicenseType: 'Vehicle Licensed to Drive',
      licenseType: 'License Type',
      // disclosedDrivers: 'Disclosed Drivers',
      uninsuredMotorist: 'Uninsured Motorist',
      extraPerks: 'Extra Perks',
      isRideshareDriver: 'Is Rideshare Driver',
      payPlan: 'Policy Pay Plan',
      hasInsurance: 'Has Insurance',
      isPriorClient: 'Is Prior Client',
      hasCancelledInsurance: 'Has Cancelled Insurance',
      wantsHomeBundle: 'Wants Home Bundle',
      wantsRentersBundle: 'Wants Renters Bundle',
      isMilitary: 'Is Military',
      hasDefensiveDriverCourse: 'Has Defensive Driver',
      isGoodStudent: 'Is Good Student',
      wantsCommercialBundle: 'Wants Commercial Bundle',
      wantsLifeBundle: 'Wants Life Bundle',
      isSafeDriver: 'Is Safe Driver',
      needsSR22: 'Needs SR22',
      wantsUmbrellaBundle: 'Wants Umbrella Bundle',
      rideshareCompany: 'Rideshare Company',
      liabilityLimits: 'Liability Limits',
      yearsInIndustry: 'Years in Industry',
      hasRefusedTesting: 'Has Refused Testing',
    },
    vehicles: {
      fullAddress: 'Full Address',
      applicantAddrStreetName: 'Street Address',
      applicantAddrStreetNumber: 'Street Number',
      applicantUnitNumber: 'Address Unit Number',
      applicantAddrCity: 'City',
      applicantStateCd: 'State',
      applicantPostalCd: 'Garaged Zip Code',
      vehicleManufacturer: 'Make',
      vehicleModel: 'Model',
      vehicleModelYear: 'Year',
      vehicleBodyStyle: 'Body',
      vehicleDaysDrivenPerWeek: 'Days Per Week',
      vehicleMilesDrivenPerDay: 'Miles Per Day ',
      vehicleAnnualDistance: 'Annual Estimation',
      vehicleCommuteMilesDrivenOneWay: 'Commute Miles One Way',
      vehicleVin: 'VIN',
      vehicleUseCd: 'Primary Use',
      liveNearCity: 'Near City',
      driveSportLuxury: 'Sport Or Luxury',
      // isGaragedNearCity: 'Near City',
      // isHighPerformanceVehicle: 'High Performance',
      ownOrLeaseVehicle: 'Vehicle Ownership',
      lengthOfOwnership: 'Length Of Ownership',
      coverageLevel: 'Coverage Level',
      estimatedQuote: 'Estimated Quote',
      // hasAAAMemberDiscount: 'AAA Member',
      // hasAntiTheftDevices: 'Anti-theft',
      purchaseDate: 'Purchase Date',
      purchaseType: 'Purchased New Or Used',
      costNew: 'Cost New',
      priorOdometerReadingValue: 'Prior Odometer Reading',
      priorOdometerReadingDate: 'Prior Odometer Reading Date',
      currentOdometerReadingValue: 'Current Odom. Reading',
      currentOdometerReadingDate: 'Current Odom. Reading Date',
      workUnitNumber: 'Work Address Unit Number',
      workStreetNumber: 'Work Street #',
      workStreetName: 'Work Street Address',
      workStateCd: 'Work State',
      workPostalCd: 'Work Zip',
      bodilyInjuryCoverage: 'Bodily Injury',
      propertyDamageCoverage: 'Property Damage',
      medicalCoverage: 'Medical',
      underInsuredMotoristCoverage: 'Under Insured Motorist',
      weight: 'Vehicle Weight',
      value: 'Value',
      radius: 'Radius',
      collision: 'Collision',
      comprehensive: 'Comprehensive',
      deductible: 'Deductible',
      hasLien: 'Has Lien',
      personalInjuryCoverage: 'Personal Injury Coverage',
      roadsideCoverage: 'Roadside Coverage',
      rentalCoverage: 'Rental Coverage',
      rideshareCoverage: 'Rideshare Coverage',
      uninsuredMotoristCoverage: 'Uninsured Motorist Coverage',
      extraTransportationCoverage: 'Extra Transportation Coverage',
      fullGlassCoverage: 'Has Full Glass Coverage',
      loanAndLeaseCoverage: 'Has Loan/Lease Coverage',
      priorLiabilityLimit: 'Prior Liability Limits',
      hasPackage: 'Has Package',
      discounts: 'List Of Discounts',
      isRideshare: 'Is Used For Rideshare',
      isUsedForFoodDelivery: 'Is Used For Food Delivery',
      isRentingVehicle: 'Is Used For Rental Service',
      comments: 'Comments',
      isParkedAtHome: 'Garaged Address Same As Home',
      maxSpeed: 'Max Speed',
      length: 'Length',
      class: 'Class',
      construction: 'Construction',
      hullType: 'Hull Type',
      additionalEquipment: 'Additional Equipment',
      motorYear: 'Motor Year',
      motorMake: 'Motor Make',
      motorSerialNumber: 'Motor Serial #',
      motorType: 'Motor Type',
      motorValue: 'Motor Value',
      trailerSerialNumber: 'Trailer Serial #',
      trailerMake: 'Trailer Make',
      trailerYear: 'Trailer Year',
      trailerValue: 'Trailer Value',
      lienholderName: 'Lienholder Name',
      lienholderAddress: 'Lienholder Address',
      loanNumber: 'Loan #',
      secondMotorSerialNumber: '2nd Motor Serial Number',
      secondMotorYear: '2nd Motor Year',
      secondMotorMake: '2nd Motor Make',
      secondMotorValue: '2nd Motor Value',
      secondMotorType: '2nd Motor Type',
      garagingType: 'Garaging Type',
      storageLocation: 'Storage Location',
      vehicleId: 'Driver Assignment',
      autoDeathIndemnity: 'Auto Death Indemnity',
      umPd: 'Uninsured Motorist Property Damage',
      hasExistingDamage: 'Has Existing Damage',
      hitchType: 'Hitch Type',
      hasAftermarketEquipment: 'Has Aftermarket Equipment',
      aftermarketEquipmentValue: 'Aftermarket Equipment Value',
      horsePower: 'Horse Power',
      storageLocationSecured: 'Storage Location Secured',
      hasSpateTowingCoverage: 'Has Spate Towing Coverage',
      hasMarineCertifications: 'Has Marine Certifications',
      clause: 'Clause',
      numberOfRearAxels: 'Number of Rear Axels',
      cslLimits: 'Combined Single Limits',
      bodilyInjuryCoveragePerAccident: 'Bodily Injury Coverage Per Acc.',
      otherCoverageDescription: 'Other Coverage Description',
      otherCoverageLimit: 'Other Coverage Limit',
      physicalDamage: 'Physical Damage',
      removeVehicles: 'Remove Vehicles',
      safteyFeatures: 'Safety Features',
      cancellationDate: 'Cancellation Date',
      newVehicleYear: 'New Vehicle Year',
      newVehicleMake: 'New Vehicle Make',
      newVehicleModel: 'New Vehicle Model',
      newVehicleBodyStyle: 'New Vehicle Body Style',
      newVehicleVin: 'New Vehicle VIN',
      extraPerksList: 'Extra Perks List',
      safetyFeaturesList: 'Safety Features List',
      vehicleIsHighPerformance: 'Vehicle Is High Performance',
      isAAAMember: 'Is AAA Member',
      hasAntiTheft: 'Has Anti Theft Devices',
      hasTripInteruption: 'Has Trip Interuption',
      hasAccidentForgiveness: 'Has Accident Forgiveness',
      hasTotalLossReplacement: 'Has Total Loss Replacement',
      weeksPerMonthDriven: 'Weeks Driven Per Month',
      coveragePlan: 'Coverage Plan',
      unknownCoverage: 'Unknown Coverage',
      titleHolder: 'Title Holder',
      hasVIN: 'Has VIN',
      antiTheftType: 'Anti-theft Device',
      passiveRestraintsType: 'Passive Restraint Device',
      hasAntiLockBrakes: 'Has Anti-lock Brakes',
      hasDaytimeLights: 'Has Daytime Lights',
      vehicleInspectionType: 'Vehice Inspection Type',
      waiverCollisionDamage: 'Wants to Waiver Collision Damage',
      wantsReplacementCostCoverage: 'Wants Replacement Cost Coverage',
      liabilityNotRequired: 'Liability Not Required',
      hasSnowPlow: 'Has Snow Plow',
      toolManufacturer: 'Tool Manufacturer',
      toolModel: 'Tool Model',
      toolModelYear: 'Tool Year',
      toolSerial: 'Tool Serial Number',
      toolDescription: 'Tool Description',
      toolCoverageAmount: 'Tool Coverage Amount',
      toolDeductible: 'Tool Deductible',
      hasIncomeLoss: 'Has Income Loss',
      hasAlarm: 'Has Alarm',
      securityEndorsement: 'Security Endorsement',
      autoEndorsement: 'Auto Endorsement',
      businessUse: 'Business Use',
    },
    homes: {
      yearBuilt: 'Year Built',
      hasCoverage: 'Currently Covered',
      currentCarrier: 'Current Carrier',
      coverageExpiration: 'Current Policy Exp.',
      hasCancelled: 'Had Insurance Cancelled',
      unitNumber: 'Address Unit Number',
      streetNumber: 'Street #',
      streetName: 'Street Name',
      city: 'City',
      county: 'County',
      state: 'State',
      zipCode: 'Zip',
      fullAddress: 'Full Address',
      streetAddress: 'Street Address',
      acres: 'Acres',
      purchasedNew: 'Purchased New',
      purchasePrice: 'Purchase Price',
      purchaseDate: 'Puchase Date',
      marketValue: 'Market Value',
      moveInDate: 'Move-in Date',
      numOfStories: '# Stories',
      totalSquareFootage: 'Total Sq. Ft.',
      primaryUse: 'Primary Use',
      rentalType: 'Rental Type',
      lengthOfVacancy: 'Length Of Vacancy',
      hasPropertyManager: 'Has Property Manager',
      residenceType: 'Residence Type',
      structureType: 'Structure Type',
      roofType: 'Roof Type',
      roofMaterial: 'Roof Material',
      roofBuilt: 'Year Roof Built/Repl.',
      homeType: 'Home Type',
      distanceFromFireStation: 'Miles To Fire Station',
      distanceFromFireHydrant: 'Ft From Fire Hydrant',
      distanceFromPoliceStation: 'Miles To Police Station',
      distanceFromTidalWater: 'Miles To Tidal Water',
      numOfKitchens: '# Kitchens',
      numOfBaths: '# Baths',
      numOfFullBaths: '# Full Baths',
      numOfHalfBaths: '# Half Baths',
      numOfBeds: '# Beds',
      basementType: 'Basement Type',
      basementSize: 'Basement Size',
      // hasBasement: 'Has Basement',
      hasGarage: 'Has Garage',
      hasPets: 'Has Pets',
      garageSize: 'Garage Size',
      exteriorMaterials: 'House Material',
      amentities: 'Amentities',
      heatType: 'Heat Type',
      coolType: 'Cooling Type',
      // hasBusinessConducted: 'Business Conducted',
      // isCloseToTidalWater: 'Close To Tidal Water',
      // hasConstructionRenovation: 'Has Construction',
      // hasGatedCommunity: 'In Gated Community',
      // isNewlyPurchased: 'Newly Purchased',
      // hasRoofingImprovement: 'Has Roofing Improvement',
      roofingImprovementYear: 'Roof Improvement Year',
      // hasWindMitigationForm: 'Has Wind Mitigation Form',
      windMitigationInspectionDate: 'Wind Mitigation Inspection Date',
      levelOfFinishes: 'Level Of Finishings',
      // additionalHighEndItems: 'Has Scheduled Property',
      safetySystems: 'Has Safety Systems',
      hasAutoBundle: 'Wants Auto Bundle',
      hasNonSmoker: 'Non-smoking',
      hasPayInFull: 'Pay In Full',
      hasImpactResistantRoof: 'Has Impact Resistant Roof',
      // hasAlarmSystem: 'Has Alarm System',
      // isSmartHome: 'Has Smart Home',
      numberOfFireplaces: '# Fireplaces',
      numberOfWoodBurningStoves: '# Wood Burning Stove',
      gargeType: 'Garage Type',
      garageSizeByCar: 'Garage Size',
      otherHeatType: 'Other Heat Type',
      otherCoolType: 'Other Cool Type',
      hasTrampoline: 'Has Trampoline',
      hasFencedTrampoline: 'Fenced Trampoline',
      hasNettedTrampoline: 'Netted Trampoline',
      electricalUpdateDate: 'Electrical Update Date',
      plumbingUpdateDate: 'Plumbing Update Date',
      petBreed: 'Pet Breed',
      petType: 'Pet Type',
      knobAndTubeWiring: 'Has Knob & Tube Wiring',
      hasFireplaceOrWoodStove: 'Has Fireplace/Wood Burn. Stove',
      otherHouseMaterial: 'Other House Material',
      otherRoofMaterial: 'Other Roof Material',
      otherRoofType: 'Other Roof Type',
      // hasFireAlarmDiscount: 'Has Fire Alarm',
      // hasGenerator: 'Has Generator',
      hasSolarPanels: 'Has Solar Panels',
      hasMortgage: 'Has Mortgage',
      priorInsuranceYearsWithCarrier: 'Prior Insurance Years',
      homeUnderConstruction: 'Under Construction',
      yearsSinceWiringUpdate: 'Years Since Wire Update',
      yearsSinceElectricalUpdate: 'Years Since Electr. Update',
      yearsSincePlumbingUpdate: 'Years Since Plumb. Update',
      roofUpdateYear: 'Last Roof Update Year',
      plumbingUpdateYear: 'Last Plumb. Update Year',
      heatingUpdateYear: 'Last Heat Update Year',
      electricalUpdateYear: 'Last Electrical Update Year',
      hvacUpdateYear: 'Last HVAC Update Year',
      homeHasGarage: 'Has Garage',
      garageType: 'Garage Type',
      homeHasBasement: 'Has Basement',
      hasSumpPump: 'Has Sump Pump',
      isInCity: 'Located In City',
      landFoundationType: 'Land Foundation',
      homeFoundationType: 'Home Foundation',
      hasDogs: 'Has Dogs',
      numberOfEmployeesWorkingInHome: '# Employees',
      fursAmount: 'Furs $$',
      fineArtsAmount: 'Fine Arts $$',
      gunsAmount: 'Guns $$',
      jewleryAmount: 'Jewlery $$',
      hasPools: 'Has Pool',
      poolType: 'Pool Type',
      poolHasFence: 'Pool Has Fence',
      hasTrampolines: 'Has Trampoline',
      hasFireplace: 'Has Fire Place',
      fireplaceType: 'Fire Place Type',
      isInFireDistrict: 'Is In Fire District',
      garageSeparatedFromHouse: 'Garage Separate From Home',
      typeOfPlumbingPipes: 'Type Of Plumbing Pipes',
      floorFinishedDescription: 'Floor Finished Description',
      basementDescription: 'Basement Description',
      amentitiesDescription: 'Amentities Description',
      hasDogHidden: 'Has Dogs [Default]',
      hasTrampolineHidden: 'Has Trampolines [Default]',
      hasPoolHidden: 'Has Pool [Default]',
      isNewBuild: 'Is New Build',
      otherHouseHoldMembersDescription: 'Other Household Members Description',
      renovationHistoryDescription: 'Renovation History Description',
      hasMonitoredAlarmSystem: 'Has Monitored Alarm System',
      hasBusiness: 'Has Business In Home',
      hasHoa: 'House Has HOA',
      numberOfTenants: 'Number Of Tenants',
      isNewPurchase: 'Is New Purchase',
      expectedClosingDate: 'Expected Closing Date',
      deeded: 'Deeded To',
      rentalManagementCompany: 'Rental Management Company',
      crawlSpaceType: 'Crawl Space Type',
      roofShape: 'Roof Shape',
      hasOtherDetachedStructures: 'Has Other Detached Structures',
      otherDetachedStructureType: 'Other Detached Structure',
      premium: 'Premium',
      fees: 'Fees',
      mortgagees: 'Mortgagees',
      dwellingCoverage: 'Dwelling Coverage',
      estimatedReplacementCost: 'Est. Repl. Cost',
      personalPropertyCoverage: 'Personal Property Coverage',
      lossOfUseCoverage: 'Loss Of Use',
      personalLiabilityCoverage: 'Personal Liability Coverage',
      medicalPaymentsCoverage: 'Medical Payments Coverage',
      allPerilsDeductible: 'All Perils Deductible',
      theftDeductible: 'Theft Deductible',
      windDeductible: 'Wind Deductible',
      discounts: 'List Of Discounts',
      hasMultiPolicyDiscount: 'Has Multi-Policy Discount',
      nonSmokerDiscount: 'Non-Smoker Discount',
      retireeDiscount: 'Retiree Discount',
      matureDiscount: 'Mature Discount',
      retirementCommunityDiscount: 'Retirement Community Discount',
      gatedCommunityDiscount: 'Gated Community Discount',
      limitedAccessDiscount: 'Limited Access Discount',
      costPerSquareFoot: 'Cost Per Square Foot',
      hasDeadBoltDiscount: 'Has Dead Bolt Discount',
      hasVisibleToNeighborDiscount: 'Has Visible To Neighbor Discount',
      hasMannedSecurityDiscount: 'Has Manned Security Discount',
      hasInsurance: 'Has Home Insurance',
      insuranceCompany: 'Home Insurance Company',
      yearsWithCompany: 'Years With Company',
      monthsWithCompany: 'Months With Company',
      yearsWithInsurance: 'Years With Continuos Coverage',
      monthsWithInsurance: 'Months With Continuos Coverage',
      identityTheft: 'Has Identify Theft',
      lossAssessment: 'Loss Assessment Amount',
      ordinanceOrLaw: 'Ordinance Or Law Percent',
      personalInjuryEndorsement: 'Has Personal Injury',
      increaseReplacementCostPercent: 'Increase Replacement Cost Percent',
      replacementCostContent: 'Has Replacement Cost Content',
      waterBackupCoverage: 'Water Backup Amount',
      hasPackage: 'Has Package',
      within1000FtFireHydrant: 'Within 1000ft Fire Hydrant',
      hurricaneDeductible: 'Hurricane Deductible',
      hasCoInsured: 'Has Co-Insured',
      hasSecondMortgage: 'Has Second Mortgage',
      hasDayCare: 'Has Day Care',
      isShortTermRental: 'Is Short Term Rental',
      typeOfDeck: 'Type Of Deck',
      hasFinishedBasement: 'Has Finished Basement',
      hasSmoker: 'Has Smokers',
      landlordRequiresCoverage: 'Landlord Requires Coverage',
      needsCoverageForBasementProperty: 'Needs Coverage For Basement Property',
      hasSupplementalHeat: 'Has Supplemental Heat',
      currentDwellingLimit: 'Current Dwelling Limit',
      currentLiabilityLimit: 'Current Liability Limit',
      currentDeductible: 'Current Deductible',
      floorMaterial: 'Floor Material',
      burglarAlarmType: 'Burglar Alarm Type',
      hasDeck: 'Has Deck',
      brushClearance: 'Brush Clearance',
      loanNumber: 'Loan Number',
      trustName: 'Trust Name',
      riskMeterScore: 'Risk Meter Score',
      comments: 'Comments',
      hasSmokeDetector: 'Has Smoke Detector',
      smokeDetectorType: 'Smoke Detector Type',
      hasFireExtinguisher: 'Has Fire Extinguisher',
      hasSprinklerSystem: 'Has Sprinkler System',
      sprinklerSystemType: 'Sprinkler System Type',
      hasFireSystem: 'Has Fire System',
      fireSystemType: 'Fire System Type',
      ownershipType: 'Ownership Type',
      numberOfUnits: '# Units',
      hasTenants: 'Has Tenants',
      hasExoticPets: 'Has Exotic Pets',
      loanAmount: 'Loan Amount',
      hasCoveredPorch: 'Has Covered Porch',
      hasFrontPorch: 'Has Front Porch',
      otherFinishesAndAmentities: 'Other Finished & Amentities',
      percentVaulted: 'Percent Vaulted',
      numberOfSkylights: '# Skylights',
      numberOfSlidingDoors: '# Sliding Doors',
      numberOfFrenchDoors: '# French Doors',
      hasWetbar: 'Has Wet Bar',
      hasPictureWindows: 'Has Picture Windows',
      hasWoodTrim: 'Has Wood Trim',
      hasSmartCamera: 'Has Smart Camera',
      hasWaterLeakDetection: 'Has Water Leak Detection',
      hasGasLeakDetection: 'Has Gas Leak Detection',
      hasOtherSmartTechnology: 'Has Other Smart Technologies',
      hasClassFourShingles: 'Has Class 4 Shingles',
      hasHeatUpdate: 'Has Heat Update',
      hasElectricalUpdate: 'Has Electrical Update',
      hasPlumbingUpdate: 'Has Plumbing Update',
      hasCoolingUpdate: 'Has Cooling Update',
      hasBackupForSumpPump: 'Has Backup For Sump Pump',
      mortgageInEscrow: 'Mortgage Is In Escrow',
      numberOfDogs: '# Dogs',
      hasHotTub: 'Has Hot Tub',
      hasDivingBoardOnPool: 'Has Diving Board',
      hasScheduledProperty: 'Has Scheduled Property',
      numberOfFloorsBelow: '# Floors Below',
      numberOfFloorsAbove: '# Floors Above',
      buildingCoverage: 'Building Coverage',
      monthlyRent: 'Monthly Rent',
      memberships: 'List Of Memberships',
      hasMortgagee: 'Has Mortgagee',
      mortgageeAddress: 'Mortgagee Address',
      hasSecondMortgagee: 'Has 2nd Mortgagee',
      secondMortgageeAddress: '2nd Mortgagee Address',
      hasLeinHolder: 'has Lein Holder',
      hasSecondLeinHolder: 'Has 2nd Lein Holder',
      leinHolderAddress: 'Lein Holder Address',
      secondLeinHolderAddress: '2nd Lein Holder Address',
      hasAdditionalInsured: 'Has Additional Insured',
      hasSecondAdditionalInsured: 'Has 2nd Add. Insured',
      additionalInsuredAddress: 'Additional Insured Address',
      secondAdditionalInsuredAddress: '2nd Add. Insured Address',
      hasPetBiteHistory: 'Pet Has Bite History',
      hasFarmAnimals: 'Has Farm Animals',
      smartHomeCompany: 'Smart Home Company',
      securitySystemCompany: 'Security System Company',
      hasFarming: 'Has Farming',
      hasSportRamps: 'Has Sport Ramps',
      basementFinishPercentage: 'Basement Finish %',
      securitySystemRingDestination: 'Security System Ring Destination',
      hasWoodBurningInsert: 'Has Wood Burning Insert',
      woodBurningStoveLocation: 'Wood Burning Stove Location',
      circuitBreakerType: 'Circuit Breaker Type',
      circuitBreakerAmps: 'Circuit Breaker Amps',
      roofCondition: 'Roof Condition',
      roofIsHailResistant: 'Roof Is Hail Resistant',
      hasOtherProperties: 'Has Other Properties',
      hasOtherStructures: 'Has Other Structures',
      otherStructureIsHeated: 'Other Structure Is Heated',
      otherStructureHeatType: 'Other Structure Heat Type',
      otherStructurePrimaryUse: 'Other Structure Primary Use',
      hasUnits: 'Has Unit',
      isPrefabricatedHome: 'Is Prefab Home',
      isMobileHome: 'Is Mobile Home',
      mobileHomeYear: 'Mobile Home Year',
      mobileHomeMake: 'Mobile Home Make',
      mobileHomeLength: 'Mobile Home Length',
      mobileHomeWidth: 'Mobile Home Width',
      landIsRented: 'Land Is Rented',
      mortgageBilled: 'Mortgage Billed',
      firstMortgageDescription: '1st Mortgage Descr.',
      secondMortgageDescription: '2nd Mortgage Descr.',
      needsFloodInsurance: 'Needs Flood Ins.',
      isOwnGeneralContractor: 'Is Own General Contractor',
      dateOfLastInspection: 'Last Inspection Date',
      fireDistrict: 'Fire District',
      constructionType: 'Construction Type',
      woodBurnerType: 'Woodburner Type',
      studOwnership: 'Stud Ownership',
      personalPropertyAmount: 'Personal Property Amount',
      isRental: 'Is Rental',
      hasPersonalPropertyOnSite: 'Has Personal Property On Site',
      constructionMethod: 'Construction Method',
      hasSupplementalHeater: 'Has Supplemental Heater',
      backupSystemType: 'Backup System Type',
      priceRange: 'Price Range',
      hasRealtor: 'Has Realtor',
      improveCredit: 'Improve Credit',
      numberOfFarmAniamls: 'Number of Farm Animals',
      electricalType: 'Electrical Type',
      typeOfFarmAnimals: 'Type of Farm Animals',
      otherStructures: 'Other Structures',
      premiumInEscrow: 'Premium in Escrow',
      waterHeaterUpdateYear: 'Water Heater Update Year',
      solarPanelOwnership: 'Solar Panel Ownership',
      solarPanelValue: 'Solar Panel Value',
      hasPatios: 'Has Patios',
      patioDescription: 'Patio Description',
      tenantOccupancy: 'Tenant Occupancy',
      hasWinterPoolCoverage: 'Has Winter Pool Coverage',
      furnaceAge: 'Furnace Age',
      hasCircuitBreakers: 'Has Circuit Breakers',
      hasVideoDoorbell: 'Has Video Doorbell',
      hasIndoorCamera: 'Has Indoor Camera',
      hasOutdoorCamera: 'Has Outdoor Camera',
      hasMinors: 'Has Minors',
      numberOfMinors: 'Number of Minors',
      liabilityInsuranceProofRequired: 'Liability Insurance Proof Required',
      desiredLiabilityLimit: 'Desired Liability Limit',
      hasRoommates: 'Has Roommates',
      roommatesDetails: 'Roommates Details',
      hasWoodBurningStove: 'Has Wood Burning Stove',
      homeownersCoverageItems: 'Homeowners Coverage Items',
      mortgageeEmail: 'Mortgagee Email',
      coverageAmount: 'Coverage Amount',
      mortgageeName: 'Mortgagee Name',
      priorEvidenceDate: 'Prior Evidence Date',
      insuranceCarrierAddress: 'Insurance Carrier Address',
      policyNumber: 'Policy Number',
      effectiveDate: 'Effective Date',
      propertyDescription: 'Property Description',
      typeOfCoverage: 'Type of Coverage',
      footTraffic: 'Foot Traffic',
      constructionGrade: 'Construction Grade',
      businessIncome: 'Business Income',
      extraExpense: 'Extra Expense',
      rentalValue: 'Rental Value',
      blanketBuilding: 'Blanket Building',
      blanketPersProp: 'Blanket Personal Property',
      blanketBldg: 'Blanket Building',
      homeStatus: 'Home Status',
      lengthAtAddress: 'Length At Address',
      noPriorReason: 'Reason For No Prior',
      numberOfResidentsUnder21: '# Residents Under 21',
      securityDevices: 'Security Devices List',
      contentsProtection: 'Contents Protection',
      securitySystem: 'Security System',
      circuitBreakerAge: 'Circuit Breaker Age',
      localAlarm: 'Local Alarm',
      // coins: 'Coinsurance',
      // china: 'China',
      // golf: 'Golf',
      // cameraEquipment: 'Camera Equipment',
      // collectibles: 'Collectibles',
      smokeDetectorMaintenance: 'Smoke Detector Maintanance',
      roofCost: 'Roof Cost',
      waterDamage: 'Water Damage',
      priorAddressUnitNumber: 'Prior Address Unit Number',
      undergroundOilTank: 'Has Underground Oil Tank',
      poolDepth: 'Pool Depth',
      highRiskDogList: 'High Risk Dog List',
      poolHasSlide: 'Pool Has Slide',
      fourPointInspection: 'Four Point Inspection',
      declarationPage: 'Declaration Page',
      poolScreenEnclousure: 'Pool Screen Enclosure',
      costScreenEnclosure: 'Cost of Pool Screen Enclosure',
      hasAdditionalHighendItems: 'Has Additional High End Items',
      hasWindMitigation: 'Has Wind Mitigation Form',
      hasFireAlarm: 'Has Fire Alarm',
      policyTerm: 'Policy Term',
      hasCoins: 'Has Coins',
      hasSilverware: 'Has Silverware',
      hasCameraEquipment: 'Has Camera Equipment',
      hasGolfEquipment: 'Has Golf Equipment',
      hasChina: 'Has China',
      hasCollectibles: 'Has Collectibles',
      smokeDetectorInspected: 'Smoke Detector Inspected',
      smokeDetectorCompliant: 'Smoke Detector Compliant',
      tenantResponsibleForSmokeDetectorMaintenance:
        'Tenant Responsible For Smoke Detector Maintenance',
      hasWaterBackupCoverage: 'Has Water Backup Coverage',
      mainSquareFeet: 'Main Square Feet',
      hasSmartHome: 'Has Smart Home',
      hasAlarm: 'Has Alarm',
      hasBatteryBackup: 'Has Battery Backup',
      hasPoolGateLatch: 'Has Pool Gate Latch',
      priorPolicyPremium: 'Prior Policy Premium',
      protectionClass: 'Protection Class',
      roofUpdateType: 'Roof Update Type',
      electricalUpdateType: 'Electrical Update Type',
      plumbingUpdateType: 'Plumbing Update Type',
      heatUpdateType: 'Heat Update Type',
      basementFinishType: 'Basement Finish Type',
      wantsLossAssessment: 'Wants Loss Assessment',
      wantsOrdinanceOrLawIncrease: 'Wants Ordinance or Law Increase',
      monthsAtAddress: 'Months at Address',
      addressCode: 'Address Code',
      roofPitch: 'Roof Pitch',
      numberOfThreeQuarterBaths: 'Number 3/4 Baths',
      shapeOfDwelling: 'Shape of Dwelling',
      windSpeed: 'Windspeed (FL)',
      numberOfInterests: 'Number of Interests',
      hasCoSigner: 'Has CoSigner',
      hasLineOfCredit: 'Has Line of Credit',
      hasThirdMortgagee: 'Has Third Mortgagee',
      hasSecondaryHeatSource: 'Has Secondary Heat Source',
      coinsHasBreakage: 'Coins Have Breakage',
      fursHasBreakage: 'Furs Have Breakage',
      fineArtsHasBreakage: 'Fine Arts Have Breakage',
      gunsHasBreakage: 'Guns Have Breakage',
      jewleryHasBreakage: 'Jewlery Have Breakage',
      musicAmount: 'Music Amount',
      musicHasBreakage: 'Music Have Breakage',
      silverwareAmount: 'Silverware Amount',
      silverwareHasBreakage: 'Silverware Have Breakage',
      temparatureControlDeviceType: 'Temperature Control Device',
      policyType: 'Policy Type',
      counterTopMaterial: 'Countertop Material',
      additionalKitchen: 'Had Additional Kitchen',
      hasCustomCabinets: 'Has Custom Cabinets',
      numberOfSolarPanels: 'Nunber of Solar Panels',
      floorMaterialList: 'Floor Material List',
      seismicGasShutoff: 'Seismic Gas Shutoff',
      paintYear: 'Paint Year',
      waterType: 'Water Type',
      earthquakeCoverage: 'Earthquake Coverage',
      excessLiabilityCoverage: 'Excell Liability Coverage',
      roofCoverageLimit: 'Roof Coverage Limit',
      homeInspection: 'Home Inspection',
      homeInspectionDate: 'Home Inspection Date',
      billingPlan: 'Billing Plan',
      numberOfWindows: 'Number of Windows',
      numberOfDoors: 'Number of Doors',
      wallMaterialDescription: 'Wall Material Description',
    },
    business: {
      entityName: 'Business Name',
      entityType: 'Business Type',
      entityStartDate: 'Business Start Date',
      commonCertificateHolderName: 'Common Certificate Holder Name',
      certificateHolderName: 'Certificate Holder Name',
      certificateHolderPreferredContact: 'Certificate Holder Preferred Contact',
      certificateHolderFullAddress: 'Certificate Holder Address',
      certificateHolderEmail: 'Certificate Holder Email',
      certificateHolderWebsite: 'Certificate Holder Website',
      certificateHolderFax: 'Certificate Holder Fax',
      certificateHolderAdditionalInsured:
        'Certificate Holder Additional Insured',
      certificateHolderCoiLanguage: 'Certificate Holder COI Language',
      certificateRequestDate: 'Certificate Request Date',
      certificateEffectiveDate: 'Certificate Effective Date',
      dba: 'D.B.A',
      MCMXFFNumbers: 'MC/MC/FF Numbers',
      streetNumber: 'Street Number',
      streetName: 'Street Name',
      city: 'City',
      state: 'State',
      zipCode: 'Zip Code',
      fullAddress: 'Full Address',
      usDotNumber: 'US DOT #',
      numberOfTractors: 'Number Tractors',
      numberOfTrailers: 'Number Trailers',
      listOfTractors: 'Tractors Details',
      listOfTrailers: 'Trailers Details',
      numberOfDrivers: 'Number Of Drivers',
      listOfDrivers: 'Drivers Details',
      cargo: 'Cargo Details',
      cargoLimit: 'Cargo Limit',
      cargoLimitDeductible: 'Cargo Deductible',
      autoLiabilityLimits: 'Auto Liability Limit',
      hasLiabilityClaims: 'Has Liability Claim',
      leasedCompanyName: 'Leased Company Name',
      yearsOfPrimaryLiabilityCoverage: 'Years Primary Liability',
      hasRelatedBroker: 'Has Related Broker',
      relatedBrokerMCNumber: 'Related Broker MC #',
      annualMiles: 'Annual Miles',
      annualRevenue: 'Annual Revenue',
      locationsEntered: 'Locations Entered',
      hasFilingsNeeded: 'Filings Needed',
      filingMCNumbers: 'Filings MC #s',
      hasCancelled: 'Has Cancelled Last 3 Years',
      hasRiskCoveredByWorkersComp: 'Risk Covered By Workers Comp',
      yearsOwnedCommercialEquipment: 'Years Owned Commercial Equipment',
      pullLoad: 'Load Pulled',
      allowsNonEmployeePassengers: 'Allows Non Employee Passengers',
      umLimit: 'UM Limit',
      uimLimit: 'UIM Limit',
      nonOwnedLimit: 'Non-Owned Limit',
      glassCoverageLimit: 'Glass Coverage Limit',
      pipLimit: 'PIP Limit',
      medPayments: 'Medical Payment',
      genLiabilityLimit: 'General Liability Limit',
      hiredAutoLimit: 'Hired Auto Limit',
      trailerInterchangeLimit: 'Trailer Interchange Limit',
      website: 'Website',
      businessType: 'Type Of Business',
      businessStartMonth: 'Start Month',
      businessStartYear: 'Start Year',
      yearsInBusiness: 'Years In Business',
      numberOfEmployees: '# Employees',
      industry: 'Industry',
      hasHadCyberAttack: 'Had Cyber Attack',
      hasSoftwareBusiness: 'Software Business',
      numberOfProtectedRecords: '# Protected Records',
      hasCryptoCurrencyBusiness: 'Cryptocurrency Business',
      hasAntiVirus: 'Has Anti-Virus',
      hasHippaCompliance: 'Is HIPPA Compliant',
      cyberLimit: 'Cyber Limits',
      ein: 'EIN',
      description: 'Business Description',
      annualPayroll: 'Annual Payroll',
      hasOtherBusinessPartners: 'Has Other Partners',
      businessPartners: 'Other Business Partners',
      hasOtherLocations: 'Has Other Locations',
      otherLocations: 'Other Locations',
      buildingSquareFt: 'Building Square Ft',
      percentOfBusinessFromInternet: '% Business From Internet',
      hasSensitiveRecords: 'Has Sensitive Records',
      sensitiveRecordsDescription: 'Sensitive Records Description',
      hasDamage: 'Vehicle Has Damage',
      collisionDamageValue: 'Collision Damage Value',
      nonCollisionDamageValue: 'Non-Collision Damage Value',
      equipmentValue: 'Equipment Value',
      numberOfPartTimeEmployees: '# Part-Time Employees',
      percentOwnership: '% Business Ownership',
      annualGrossReceipts: 'Annual Gross Receipts',
      hasSubContractingExpenses: 'Has Subcontracting Expenses',
      isNewVenture: 'Is New Venture',
      ownOrLeaseOffice: 'Own Or Lease Office',
      personalPropertyCoverage: 'Personal Property Coverage',
      businessPlanDescription: 'Business Plan',
      streetAddress: 'Street Address',
      statesEntered: 'States Entered',
      citiesEntered: 'Cities Entered',
      subcontractingExpenses: 'Subcontracting Expenses',
      constructionType: 'Property Construction Type',
      yearBuilt: 'Property Year Built',
      renovationDetails: 'Property Renovation Details',
      hasCentralFireAlarm: 'Property Has Central Fire Alarm',
      hasCentralSecurityAlarm: 'Property Has Central Security Alarm',
      buildingHasDangerousMaterial: 'Has Flammable, Explosive, Other Material',
      buildingLienHoldersDetails: 'Lien Holder Details',
      additionalInsuredDetails: 'Additional Insured Details',
      hasAutos: 'Has Autos',
      autoDetails: 'Autos Details',
      workerDetails: 'Workers Details',
      equipmentDetails: 'Equipment Details',
      includeOwnerInCoverage: 'Include Owner In Coverage',
      reeferDeductible: 'Reefer Deductible',
      needsCargoCoverage: 'Needs Cargo Coverage',
      hasHazardousCargo: 'Has Hazardous Cargo',
      needsHiredAutoCoverage: 'Needs Hired Auto Coverage',
      isOtherEntity: 'Is Other Subsidiary/Entity',
      hasOtherSubsidiaries: 'Has Other Subsidiaries',
      hasSafetyProgram: 'Has Safety Programs',
      hasOtherInsuranceWithCompany: 'Has Other Insurance W/ Company',
      hasHadMisconductClaims: 'Had Misconduct Claim',
      hasBeenConvicted: 'Has Been Convicted (i.e. Fraud)',
      hasSafetyViolations: 'Has Safety Violations',
      hadBankruptcy: 'Had Bankruptcy',
      hadLien: 'Had Lien',
      hasTrust: 'Has Trust',
      hasForeignOperations: 'Has Foreign Operations',
      hasOtherVentures: 'Has Other Ventures',
      hadTailCoverage: 'Had Tail Coverage',
      hasPriorCoverageExclusions: 'Had Prior Coverage Exclusions',
      typesOfOperations: 'Types Of Operations [List]',
      hasSubcontractorsCertOfInsurance: 'Subcontractors Have Cert Insurance',
      hasMoreCoverageThanSubcontractors: 'Has More Coverage Than Subcontactors',
      hasSafetyMarketing: 'Has Safety Marketing',
      hadCrimeOnPremises: 'Had Crime On Premises',
      hasDayCare: 'Has Daycare On Premises',
      hasPlansForDemolition: 'Has Plans For Demolition',
      hasPlansForStructurialChanges: 'Has Structurial Changes Plans',
      // hasPools: 'Has Pools',
      hasDocksOrFloats: 'Has Docks Or Floats',
      hasParkingFacilities: 'Has Parking Facility',
      hasFeeAtParkingFacilities: 'Charges Fee At Parking Facility',
      hasRecreationalFacilities: 'Has Recreational Facilities',
      hasSportingOrSocialEvents: 'Has Sporting Or Social Events',
      requiresVendorsCoverage: 'Requires Vendor Coverage',
      hadDiscontinuedOperations: 'Had Discontinued Operations',
      hasSalesWithApplicants: 'Has Sales With Other Applicants',
      hasLaborInterchange: 'Has Labor Interchange',
      hasRepackagedProducts: 'Products Are Repackaged',
      repackagesSoldProducts: 'Repackages Sold Products',
      hasMedicalOperations: 'Has Medical Operations',
      hasExposureToRadioactives: 'Has Exposure To Radioactives',
      hasHazardousMaterial: 'Has Hazardous Material',
      hasFormalWrittenSafetyPolicy: 'Has Formal Written Safety Policy',
      hadProductsRecalled: 'Has Products Recalled',
      totalCoverage: 'Total Coverage',
      injuryCoverage: 'Injury Coverage',
      eachOccurrenceCoverage: 'Each Occurence Coverage',
      rentedPremisesCoverage: 'Rented Premises Coverage',
      medicalExpenseCoverage: 'Medical Expenses Coverage',
      employeeBenefitCoverage: 'Employee Benefit Coverage',
      leasesAutos: 'Leases Auto',
      ownAutos: 'Owns Auto',
      regularRouteDetails: 'Regular Route Details',
      majorCitiesList: 'List of Major Cities Entered',
      hasELD: 'Has ELD',
      eldProvider: 'ELD Provider',
      unitNumber: 'Unit Number',
      yearsInIndustry: 'Years In Industry',
      percentOfWorkSubcontracted: '% Work Subcontracted',
      hasContractsWithSubcontractors: 'Has Contracts With Subcontractors',
      isOnSubcontractorGLPolicies: 'Is On Subcontractor GL Policy',
      subcontractorsHaveWorkersComp: 'Subcontractors Have Workers Comp',
      systemsForProtectingPublicFromInjury:
        'Has System For Proectecting Public',
      materialLiftingEquipment: 'Has Material Lifting Equipment',
      maxBuildingHeight: 'Max Building Height',
      roofOpeningProtection: 'Has Roof Opening Protection',
      nrcaMember: 'Is NRCA Member',
      typesOfBuildings: 'Types of Buildings [List]',
      percentOfProjectsResidential: '% Projects Residential',
      percentOfResidentialProjectsIsNew: '% Residential Projects New',
      percentOfResidentialProjectsIsRepair: '% Residential Projects Repair',
      percentOfResidentialProjectsIsPitchedRoof:
        '% Residential Projects Pitched Roof',
      percentOfResidentialProjectsIsFlatRoof:
        '% Residential Projects Flat Roof',
      percentOfResidentialProjectsIsMetal: '% Residential Projects Metal',
      percentOfResidentialProjectsIsClayConcreteTile:
        '% Residential Projects Clay or Concrete',
      percentOfResidentialProjectsIsColdAppliedMembranes:
        '% Residential Projects Cold Membranes',
      percentOfResidentialProjectsIsHeatApplied:
        '% Residential Projects Heat Applied',
      percentOfProjectsCommercial: '% Commercial Projects',
      percentOfCommercialProjectsIsNew: '% Commercial Projects New',
      percentOfCommercialProjectsIsRepair: '% Commercial Projects Repair',
      percentOfCommercialProjectsIsPitchedRoof:
        '% Commercial Projects Pitched Roof',
      percentOfCommercialProjectsIsFlatRoof: '% Commercial Projects Flat Roof',
      percentOfCommercialProjectsIsMetal: '% Commercial Projects',
      percentOfCommercialProjectsIsClayConcreteTile:
        '% Commercial Projects Clay or Concrete',
      percentOfCommercialProjectsIsColdAppliedMembranes:
        '% Commercial Projects Cold Membrane',
      percentOfCommercialProjectsIsHeatApplied:
        '% Commercial Projects Heat Applied',
      percentOfProjectsIndustrial: '% Industrial Projects',
      percentOfIndustrialProjectsIsNew: '% Industrial Projects New',
      percentOfIndustrialProjectsIsRepair: '% Industrial Projects Repair',
      percentOfIndustrialProjectsIsPitchedRoof:
        '% Industrial Projects Pitched Roof',
      percentOfIndustrialProjectsIsFlatRoof: '% Industrial Projects Flat Roof',
      percentOfIndustrialProjectsIsMetal: '% Industrial Projects Metal',
      percentOfIndustrialProjectsIsClayConcreteTile:
        '% Industrial Projects Clay or Concrete',
      percentOfIndustrialProjectsIsColdAppliedMembranes:
        '% Industrial Projects Cold Membranes',
      percentOfIndustrialProjectsIsHeatApplied:
        '% Industrial Projects Heat Applied',
      comments: 'Comments or Notes',
      blanketInsurance: 'Blanket Insurance',
      hasLicense: 'Has Commercial License',
      licenseYear: 'Year Commercial License Issued',
      licenseType: 'Commercial License Type',
      licenseNumber: 'Commercial License Number',
      generalContractorPercent: 'General Contractor Percent',
      subcontractorPercent: 'Subcontractor Percent',
      constructionManagerPercent: 'Construction Manager Percent',
      developerPercent: 'Developer Percent',
      withPenaltyClausePercent: 'Penalty Clause Percent',
      otherVentureDetails: 'Other Venture Details',
      otherVenturesCovered: 'Other Ventures Covered',
      hasRecruitingAgency: 'Has Recruiting Agency',
      recruitingAgencyDetails: 'Recruiting Agency Details',
      radiusOfOperations: 'Operations Radius',
      payrollOfOwners: 'Payroll of Owners',
      payrollOfEmployees: 'Payroll of Employees',
      hasLicensedLabor: 'Has Licensed Labor',
      hasOperationsUnderOCP: 'Has Operations Under OCP',
      OCPOperationDetails: 'OCP Operations Details',
      commercialIndustrialPercent: 'Commercial Industrial Percent',
      residentialApartmentsPercent: 'Residential Apartments Percent',
      commercialInstitutionalPercent: 'Comercial Institutional Percent',
      residentialCondosPercent: 'Residential Condos Percent',
      commercialMercantilePercent: 'Commercial Mercantile Percent',
      residentialCustomPercent: 'Residential Custom Percent',
      commercialOfficePercent: 'Commercial Office Percent',
      residentialTractPercent: 'Residential Tract Percent',
      commercialStructuralPercent: 'Commercial Structural Percent',
      residentialStructuralPercent: 'Residential Structural Percent',
      commercialNonstructuralPercent: 'Commercial Nonstructural Percent',
      residentialNonstructuralPercent: 'Residential Nonstructural Percent',
      commercialOtherPercent: 'Commercial Other Percent',
      residentialOtherPercent: 'Residential Other Percent',
      hasHoldHarmlessClause: 'Has Hold Harmless Clause',
      usesSameContractors: 'Uses Same Contractors',
      hasCasualLabor: 'Has Casual Labor',
      hasWorkersComp: 'Has Workers Compensation',
      projectsPlanned: 'Projects Planned',
      pastProjects: 'Past Projects',
      averageJobCost: 'Average Job Cost',
      equipmentRented: 'Equipment Rented',
      leasesMobileEquipment: 'Leases Mobile Equipment',
      mobileEquipmentWithOperators: 'Mobile Equipment With Operators',
      mobileEquipmentType: 'Mobile Equipment Type',
      usesCranes: 'Uses Cranes',
      boomLength: 'Boom Length',
      performedRepairs: 'Performed Repairs',
      workWithPublicFacilities: 'Work With Public Facilities',
      hasTallProjects: 'Has Tall Projects',
      percentageOfTallWork: 'Percent of Tall Work',
      tallestProjectHeight: 'Tallest Project Height',
      hasUndergroundProjects: 'Has Undeground Projects',
      percentageOfUndergroundWork: 'Percent of Underground Work',
      deepestProjectDepth: 'Deepest Project Depth',
      hasSlopedWork: 'Has Sloped Work',
      steepestProjectDegree: 'Steepest Project Degree',
      hasPlannedRoofRepair: 'Has Planned Roof Repair',
      terminated: 'Terminated',
      replacedContractor: 'Replaced Contractor',
      replacedContractorDetails: 'Replaced Contractor Details',
      hasClaimsAgainstEntities: 'Has Claims Against Entities',
      hasPossibleClaim: 'Has Possible Claim',
      hasFaultyAccusation: 'Has Fauly Accusation',
      minDrivingYearsRequired: 'Min Driving Years',
      priorLiabilityLimits: 'Prior Liability Limits',
      cancelDate: 'Proposed Cancellation Date',
      binderNumber: 'Binder Number',
      additionalInterestType: 'Additional Interest Type',
      otherInterestDescription: 'Other Interest Description',
      retroDate: 'Retro Date',
      aggregateCoverage: 'Aggregate Coverage',
      productsCompletedAggregateCoverage: 'Prods Completed Aggr Coverage',
      generalLiabilityCoveragesDescription: 'GL Coverage Description',
      hasSubcontractors: 'Has Subcontractors',
      otherCoverageDescription: 'Other Coverage Description',
      waiverSubrogation: 'Waiver Subrogation',
      otherCoverageLimit: 'Other Coverage Limit',
      umbrellaDedType: 'Umbrella Ded Type',
      umbrellaDedAmount: 'Umbrella Ded Amount',
      typesOfAutoCoverages: 'Types of Auto Coverages [List]',
      autoCoveragesDescription: 'Auto Coverages Description',
      combinedSingleLimitCoverage: 'Combined Single Limit Coverage',
      bodilyInjuryPersonCoverage: 'Bodily Injury Person Coverage',
      bodilyInjuryAccidentCoverage: 'Bodily Injury Accident Coverage',
      propertyDamageCoverage: 'Property Damage Coverage',
      uninsuredMotoristCoverage: 'Uninsured Motorist Coverage',
      otherCoverage: 'Other Coverage',
      silverwareValue: 'Silverware Coverage',
      dateCoverageLapsed: 'Date Coverage Lapsed',
      waterDamage: 'Water Damage Coverage',
      vehicleCoverageType: 'Vehicel Coverage Type',
      lossOfHeat: 'Loss of Heat',
      deductible: 'Deductible',
      garageLiabilityCoverageType: 'Garage Liability Coverage Type',
      garageLiabilityCoveragesDescription:
        'Garage Liability Coverages Description',
      autoOnlyAccidentCoverage: 'Auto Only Accident Coverage',
      otherThanAutoOnlyAccidentCoverage:
        'Other than Auto Only Accident Coverage',
      otherThanAutoOnlyAggregateCoverage:
        'Other than Auto Only Aggregate Coverage',
      excessLiabilityCoveragesDescription:
        'Excess Liability Coverages Description',
      hasStatutoryLimits: 'Has Statutory Limits',
      employerLiabilityAccidentCoverage: 'Employer Liability Accident Coverage',
      employerLiabilityEmployeeCoverage: 'Employer Liability Employee Coverage',
      employerLiabilityPolicyLimit: 'Employer Liability Policy Limit',
      workersCompensationCoveragesDescription:
        'Workers Compensation Coverages Description',
      specialConditionsCoveragesDescription:
        'Special Condition Coverages Description',
      specialConditionCoverageFees: 'Special Condition Coverage Fees',
      specialConditionsCoverageTaxes: 'Special Condition Coverage Taxes',
      specialConditionsEstimatedPremium: 'Special Condition Estimated Premium',
      loanNumber: 'Loan Number',
      authorizedRep: 'Authorized Representative',
      previousYearsGross: 'Previous Years Gross Revenue',
      billingPlan: 'Billing Plan',
      paymentPlan: 'Payment Plan',
      auditType: 'Audit Type',
      largestProjects: 'Largest Projects',
      workType: 'Work Type',
      percentWorkAirConditioning: 'Percent Work Air Condition',
      percentWorkCabinetry: 'Percent Work Cabinetry',
      percentWorkCarpentry: 'Percent Work Carpentry',
      percentWorkCleaningCarpets: 'Percent Work Cleaning Carpets',
      percentWorkCleaningOffice: 'Percent Work Cleaning Office',
      percentWorkDoors: 'Percent Work Doors',
      percentWorkDriveway: 'Percent Work Driveway',
      percentWorkDrywall: 'Percent Work Drywall',
      percentWorkElectrical: 'Percent Work Electrical',
      percentWorkExteriorPainting: 'Percent Work Exterior Painting',
      percentWorkInteriorPainting: 'Percent Work Interior Painting',
      percentWorkFences: 'Percent Work Fences',
      percentWorkFlooring: 'Percent Work Flooring',
      percentWorkLandscaping: 'Percent Work Landscaping',
      percentWorkPlaster: 'Percent Work Plaster',
      percentWorkPlumbing: 'Percent Work Plumbing',
      percentWorkTile: 'Percent Work Tile',
      percentWorkMarble: 'Percent Work Marble',
      percentWorkWoodwork: 'Percent Work Woodwork',
      percentWorkMason: 'Percent Work Mason',
      hasWarehouse: 'Has Warehouse',
      hasStoreFront: 'Has Storefront',
      purchasePrice: 'Purchase Price',
      buildingOwned: 'Building Owned',
      annualSubcontractorCost: 'Annual Subcontractor Cost',
      mailingAddress: 'Mailing Address',
      percentWorkAppliance: 'Percent of Work is Appliance',
      residentialWork: 'Residential Work',
      outOfState: 'Out of State',
      outOfStatePercent: 'Out of State Percent',
      workOverThreeStories: 'Work over Three Stories',
      excavationWork: 'Excavation Work',
      machineryWork: 'Machinery Work',
      depthOfExcavation: 'Depth of Excavation',
      demolitionWork: 'Demolition Work',
      roofRepairWork: 'Reoof Repair Work',
      asbestosRemovalWork: 'Asbestos Removal Work',
      floorWork: 'Floor Work',
      snowRemovalWork: 'Snow Removal Work',
      percentWorkSnowRemoval: 'Percent of Work Snow Removal',
      percentWorkSnowRemovalOther: 'Percent of Work Snow Removal Other',
      numberOfActiveOwners: 'Number of Active Owners',
      equipmentInsuranceType: 'Equipment Insurance Type',
      toolStorage: 'Tool Storage',
      rentalEquipmentCoverage: 'Rental Equipment Coverage',
      rentalToolLimit: 'Rental Tool Limit',
      toolRentalExpense: 'Tool Rental Expense',
      hasToolsOnsite: 'Has Tools on Site',
      jobsiteSecuritySystems: 'Jobsite Security Systems',
      insuredUnderDifferentName: 'Insured Under Different Name',
      alternateBusinessName: 'Alternative Business Name',
      alternateBusinessActive: 'Alt Business Active',
      eCommerceSite: 'eCommerace Site',
      productsSold: 'Products Sold',
      wholesaleProducts: 'Wholesale Products',
      hasWeaponProducts: 'Has Weapons Products',
      weaponProductsComment: 'Weapon Products Comment',
      hasTobaccoProducts: 'Has Tobacco Products',
      tobaccoProductsComment: 'Tobacco Products Comment',
      hasPharmaceuticals: 'Has Pharmaceuticals',
      pharmaceuticalsComment: 'Pharmaceuticals Comment',
      confidentialInformation: 'Confidential Information',
      privateLabelProducts: 'Private Label Products',
      productDescription: 'Product Description',
      foreignLocation: 'Foreign Location',
    },
    locations: {
      streetNumber: 'Street Number',
      streetName: 'Street Name',
      unit: 'Address Unit Number',
      streetAddress: 'Street Address',
      city: 'City',
      county: 'County',
      state: 'State',
      zipCode: 'Zip Code',
      fullAddress: 'Full Address',
      locationNumber: 'Location #',
      buildingNumber: 'Building #',
      isWithinCityLimits: 'Is Within City Limits',
      occupancyType: 'Occupancy Type',
      classCode: 'Class Code',
      classification: 'Classification Type',
      premiumCode: 'Premium Code',
      exposure: 'Exposure',
      territoryCode: 'Territory code',
      premisesOperationsRate: 'Premises/Operations Rate',
      productsRate: 'Products Rate',
      premisesOperationPremium: 'Premises/Operations Premium',
      productsPremium: 'Products Premium',
      constructionType: 'Construction Type',
      distanceToFireHydrant: 'Distance to Fire Hydrant',
      distanceToFireStation: 'Distance to Fire Station',
      fireDistrict: 'Fire District',
      numberOfStories: 'Number of Stories',
      numberOfBasements: 'Number of Basements',
      yearBuilt: 'Year Built',
      totalSquareFootage: 'Total Square Footage',
      hasUpdatedWiring: 'Had Wiring Updates',
      updatedWiringYear: 'Updated Wiring Year',
      hasUpdatedRoofing: 'Had Roofing Updates',
      updatedRoofingYear: 'Roofing Update Year',
      hasUpdatedPlumbing: 'Had Plumbing Updates',
      updatedPlumbingYear: 'Plumbing Update Year',
      hadUpdatedHeating: 'Had Heating Update',
      updatedHeatingYear: 'Heating Update Year',
      roofType: 'Roof Type',
      hasWoodBurningStoves: 'Has Wood Burning Stoves',
      heatType: 'Primary Heat Type',
      secondaryHeatType: 'Secondary Heat Type',
      coolType: 'Cool Type',
      burglarAlarmType: 'Burglar Alarm Type',
      fireProtectionType: 'Fire Protection Type',
      percentOfSprinklerFireProtection: '% Fire Protection = Sprinklers',
      loanNumber: 'Loan #',
      stakeholderType: 'Other Owner Type',
      stakeholderName: 'Other Owner Name',
      stakeholderAddress: 'Other Owner Address',
      needsFloodInsurance: 'Needs Flood Insurance',
      causeOfLoss: 'Cause of Loss',
      deductible: 'Deductible',
      percentCoInsured: 'Percent Coinsured',
      coverageAmount: 'Coverage Amount',
      coveragesDescription: 'Coverages Description',
      buildingDeductible: 'Building Deductible',
      contentsDeductible: 'Contents Deductible',
      buildingLimit: 'Building Limit',
      personalPropLimit: 'Persoanl Property Limit',
      businessIncome: 'Business Income',
      extraExpense: 'Extra Expenses',
      rentalValue: 'Rental Value',
      blanketBuilding: 'Blanket Building',
      blanketPersonalProp: 'Blanket Personal Property',
      blanketBuildingAndPp: 'Blanket Building and Property',
      otherCoverageDescription: 'Other Coverages Description',
      otherCoverageLimit: 'Other Coverage Limit',
      inlandmarineLimitDescription: 'Inland Marine Limit Description',
      inlandmarineLimitAmount: 'Inland Marine Limit Amount',
      crimeLimitDescription: 'Crime Limit Description',
      crimeLimitAmount: 'Crime Limit Amount',
      boilerLimitDescription: 'Boiler Limit Description',
      boilerLimitAmount: 'Boiler Limit Amount',
      equipmentMonthsStorage: 'Equipment Months Storage',
      maxValueInBuilding: 'Max Value in Building',
      maxValueOutside: 'Max Value Outside Building',
      equipmentDescription: 'Equipment Description',
      maxItemValue: 'Max Item Value',
      coinsurancePercent: 'Coinsurance Percent',
      equipmentNumber: 'Equipment Number',
      equipmentGroup: 'Equipment Group',
      equipmentSerial: 'Equipment Serial Number',
      equipmentNewUsed: 'Equipment New or Used',
      equipmentDatePurchased: 'Equipment Date Purchased',
      equipmentCapacity: 'Equipment Capacity',
      generalInfo1: 'General Info 1',
      generalInfo2: 'General Info 2',
      generalInfo3: 'General Info 3',
      generalInfo4: 'General Info 4',
      explaination1: 'Explanation 1',
      itemNumber: 'Item Number',
      itemOtherDescription: 'Other Item Description',
      optionalCauseOfLoss: 'Optional Cause of Loss',
      earthquakeLimit: 'Earthquake Limit',
      earthquakeDed: 'Earthquake Deductible',
      floodLimit: 'Flood Limit',
      floodDed: 'Flood Deductible',
      describeOperations: 'Operations Description',
      materialsValue: 'Material Value',
      jobSiteSecurity: 'Job Site Security',
    },
    incidents: {
      type: 'Type',
      description: 'Description',
      date: 'Date',
      amount: 'Amount',
      driverIncidentId: 'Driver Assignment',
      vehicleIncidentId: 'Vehicle Assignment',
      propertyDamage: 'Property Damage',
      bodilyInjury: 'Bodily Injury',
      collision: 'Collision',
      medicalPayment: 'Medical Payment',
      vehicleIndex: 'VI',
      catLoss: 'Cat Loss',
    },
    recreationalVehicles: {
      type: 'Type',
    },
    policies: {
      typeOfInsurance: 'Type of Insurance',
      namedInsured: 'Named Insured',
      carrier: 'Carrier Name',
      agency: 'Agency Name',
      producer: 'Producer Name',
      insuranceLetter: 'Insurance Letter',
      carrierNaic: 'Carrier NAIC',
      causesOfLoss: 'Causes of Loss',
      policyNumber: 'Policy Number',
      effectiveDate: 'Effective Date',
      expirationDate: 'Expiration Date',
      coveredProperty: 'Covered Property',
      coverageLimit1: 'Coverage Limit 1',
      coverageLimit2: 'Coverage Limit 2',
      coverageLimit3: 'Coverage Limit 3',
      coverageLimit4: 'Coverage Limit 4',
      coverageLimit5: 'Coverage Limit 5',
      coverageLimit6: 'Coverage Limit 6',
      coverageLimit7: 'Coverage Limit 7',
      coverageLimit8: 'Coverage Limit 8',
      coverageLimit9: 'Coverage Limit 9',
      coverageLimit10: 'Coverage Limit 10',
      coverageName1: 'Coverage Name 1',
      coverageName2: 'Coverage Name 2',
      coverageName3: 'Coverage Name 3',
      coverageName4: 'Coverage Name 4',
      coverageName5: 'Coverage Name 5',
      coverageName6: 'Coverage Name 6',
      coverageName7: 'Coverage Name 7',
      coverageName8: 'Coverage Name 8',
      coverageName9: 'Coverage Name 9',
      coverageName10: 'Coverage Name 10',
      subPolicyType: 'Sub Policy Type',
      coveredPropertyList: 'Covered Property List',
      causesOfLossList: 'Causes of Loss List',
    },
  };
}

export async function returnArrayOfKeys(type?: string) {
  try {
    let keys;
    if (type) {
      const rKeys = await returnKeys();
      keys = rKeys[type];
      const objArray = Object.keys(keys).map((key) => {
        return key;
      });
      return objArray;
    } else {
      keys = await returnKeys();
      const objArray = Object.keys(keys).map((key) => {
        return key;
      });
      const keysArray = [];
      objArray.forEach((obj) => {
        const o = keys[obj];
        const oKeys = Object.keys(o).map((oi) => {
          return oi;
        });
        keysArray.push(...oKeys);
      });
      return keysArray;
    }
  } catch (error) {
    return [];
  }
}

export async function returnArrayOfKeysType() {
  try {
    const keys = await returnKeys();

    const objArray = Object.keys(keys).map((key) => {
      return key;
    });
    const keysArray = [];
    objArray.forEach((obj) => {
      const o = keys[obj];
      const oKeys = Object.keys(o).map(() => {
        return `${obj}`;
      });
      keysArray.push(...oKeys);
    });
    return keysArray;
  } catch (error) {
    return [];
  }
}

export async function returnArrayOfKeyPairs(type?: string) {
  try {
    let keys;
    if (type) {
      const rKeys = await returnKeys();
      keys = rKeys[type];
      const objArray = Object.keys(keys).map((key) => {
        return { type: type, pair: { key: key, value: keys[key] } };
      });
      return objArray;
    } else {
      keys = await returnKeys();
      const objArray = Object.keys(keys).map((key) => {
        return key;
      });
      const keysArray = [];
      objArray.forEach((obj) => {
        const o = keys[obj];
        const oKeys = Object.keys(o).map((oi) => {
          return { type: obj, pair: { key: oi, value: o[oi] } };
        });

        keysArray.push(...oKeys);
      });
      return keysArray;
    }
  } catch (error) {
    return [];
  }
}
export async function returnClientDetailRows(client) {
  const keys = await returnKeys();
  const clientKeys = keys['client'];
  const driverKeys = keys['drivers'];
  const vehicleKeys = keys['vehicles'];
  const homeKeys = keys['homes'];
  const businessKeys = keys['business'];

  function returnUniqRows(rows) {
    return _.uniqBy(rows, 'label');
  }

  const rows = [];

  for (const [key, value] of Object.entries(clientKeys)) {
    if (client[key]) {
      const row = {
        label: clientKeys[key],
        value: client[key] || 'Not Completed',
      };
      rows.push(row);
    }
  }

  if (client.hasOwnProperty('drivers') && client.drivers.length > 0) {
    client.drivers.forEach((driver, i) => {
      for (const [key, value] of Object.entries(driverKeys)) {
        if (driver[key]) {
          const row = {
            label: driverKeys[key],
            value: driver[key] || 'Not Completed',
          };
          rows.push(row);
        }
      }
    });
  }

  if (client.hasOwnProperty('vehicles') && client.vehicles.length > 0) {
    client.vehicles.forEach((vehicle, i) => {
      for (const [key, value] of Object.entries(vehicleKeys)) {
        if (vehicle[key]) {
          const row = {
            label: vehicleKeys[key],
            value: vehicle[key] || 'Not Completed',
          };
          rows.push(row);
        }
      }
    });
  }

  if (client.hasOwnProperty('homes') && client.homes.length > 0) {
    for (const [key, value] of Object.entries(homeKeys)) {
      if (client.homes[0][key]) {
        const row = {
          label: homeKeys[key],
          value: client.homes[0][key] || 'Not Completed',
        };
        rows.push(row);
      }
    }
  }

  if (client.hasOwnProperty('business')) {
    for (const [key, value] of Object.entries(businessKeys)) {
      if (client.business[key]) {
        const row = {
          label: businessKeys[key],
          value: client.business[key] || 'Not Completed',
        };
        rows.push(row);
      }
    }
  }

  return returnUniqRows(rows);
}
